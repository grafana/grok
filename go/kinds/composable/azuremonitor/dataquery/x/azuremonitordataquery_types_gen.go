// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by pipeline:
//     go
// Using jennies:
//     GoTypesJenny
//     ComposableLatestMajorsOrXJenny
//
// Run 'go generate ./' from repository root to regenerate.

package azuremonitordataquery

// Defines values for AzureQueryType.
const (
	AzureQueryTypeAzureLogAnalytics               AzureQueryType = "Azure Log Analytics"
	AzureQueryTypeAzureMetricNames                AzureQueryType = "Azure Metric Names"
	AzureQueryTypeAzureMonitor                    AzureQueryType = "Azure Monitor"
	AzureQueryTypeAzureNamespaces                 AzureQueryType = "Azure Namespaces"
	AzureQueryTypeAzureRegions                    AzureQueryType = "Azure Regions"
	AzureQueryTypeAzureResourceGraph              AzureQueryType = "Azure Resource Graph"
	AzureQueryTypeAzureResourceGroups             AzureQueryType = "Azure Resource Groups"
	AzureQueryTypeAzureResourceNames              AzureQueryType = "Azure Resource Names"
	AzureQueryTypeAzureSubscriptions              AzureQueryType = "Azure Subscriptions"
	AzureQueryTypeAzureWorkspaces                 AzureQueryType = "Azure Workspaces"
	AzureQueryTypeGrafanaTemplateVariableFunction AzureQueryType = "Grafana Template Variable Function"
)

// Defines values for GrafanaTemplateVariableQueryType.
const (
	GrafanaTemplateVariableQueryTypeAppInsightsGroupByQuery    GrafanaTemplateVariableQueryType = "AppInsightsGroupByQuery"
	GrafanaTemplateVariableQueryTypeAppInsightsMetricNameQuery GrafanaTemplateVariableQueryType = "AppInsightsMetricNameQuery"
	GrafanaTemplateVariableQueryTypeMetricNamesQuery           GrafanaTemplateVariableQueryType = "MetricNamesQuery"
	GrafanaTemplateVariableQueryTypeMetricNamespaceQuery       GrafanaTemplateVariableQueryType = "MetricNamespaceQuery"
	GrafanaTemplateVariableQueryTypeResourceGroupsQuery        GrafanaTemplateVariableQueryType = "ResourceGroupsQuery"
	GrafanaTemplateVariableQueryTypeResourceNamesQuery         GrafanaTemplateVariableQueryType = "ResourceNamesQuery"
	GrafanaTemplateVariableQueryTypeSubscriptionsQuery         GrafanaTemplateVariableQueryType = "SubscriptionsQuery"
	GrafanaTemplateVariableQueryTypeUnknownQuery               GrafanaTemplateVariableQueryType = "UnknownQuery"
	GrafanaTemplateVariableQueryTypeWorkspacesQuery            GrafanaTemplateVariableQueryType = "WorkspacesQuery"
)

// Defines values for ResultFormat.
const (
	ResultFormatTable      ResultFormat = "table"
	ResultFormatTimeSeries ResultFormat = "time_series"
)

// AppInsightsGroupByQuery defines model for AppInsightsGroupByQuery.
type AppInsightsGroupByQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// AppInsightsMetricNameQuery defines model for AppInsightsMetricNameQuery.
type AppInsightsMetricNameQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// Azure Monitor Logs sub-query properties
type AzureLogsQuery struct {
	// KQL query to be executed.
	Query *string `json:"query,omitempty"`

	// @deprecated Use resources instead
	Resource *string `json:"resource,omitempty"`

	// Array of resource URIs to be queried.
	Resources    []string      `json:"resources,omitempty"`
	ResultFormat *ResultFormat `json:"resultFormat,omitempty"`

	// Workspace ID. This was removed in Grafana 8, but remains for backwards compat
	Workspace *string `json:"workspace,omitempty"`
}

// AzureMetricDimension defines model for AzureMetricDimension.
type AzureMetricDimension struct {
	// Name of Dimension to be filtered on.
	Dimension *string `json:"dimension,omitempty"`

	// @deprecated filter is deprecated in favour of filters to support multiselect.
	Filter *string `json:"filter,omitempty"`

	// Values to match with the filter.
	Filters []string `json:"filters,omitempty"`

	// String denoting the filter operation. Supports 'eq' - equals,'ne' - not equals, 'sw' - starts with. Note that some dimensions may not support all operators.
	Operator *string `json:"operator,omitempty"`
}

// AzureMetricQuery defines model for AzureMetricQuery.
type AzureMetricQuery struct {
	// The aggregation to be used within the query. Defaults to the primaryAggregationType defined by the metric.
	Aggregation *string `json:"aggregation,omitempty"`

	// Aliases can be set to modify the legend labels. e.g. {{ resourceGroup }}. See docs for more detail.
	Alias *string `json:"alias,omitempty"`

	// Time grains that are supported by the metric.
	AllowedTimeGrainsMs []int64 `json:"allowedTimeGrainsMs,omitempty"`

	// Used as the value for the metricNamespace property when it's different from the resource namespace.
	CustomNamespace *string `json:"customNamespace,omitempty"`

	// @deprecated This property was migrated to dimensionFilters and should only be accessed in the migration
	Dimension *string `json:"dimension,omitempty"`

	// @deprecated This property was migrated to dimensionFilters and should only be accessed in the migration
	DimensionFilter *string `json:"dimensionFilter,omitempty"`

	// Filters to reduce the set of data returned. Dimensions that can be filtered on are defined by the metric.
	DimensionFilters []AzureMetricDimension `json:"dimensionFilters,omitempty"`

	// @deprecated Use metricNamespace instead
	MetricDefinition *string `json:"metricDefinition,omitempty"`

	// The metric to query data for within the specified metricNamespace. e.g. UsedCapacity
	MetricName *string `json:"metricName,omitempty"`

	// metricNamespace is used as the resource type (or resource namespace).
	// It's usually equal to the target metric namespace. e.g. microsoft.storage/storageaccounts
	// Kept the name of the variable as metricNamespace to avoid backward incompatibility issues.
	MetricNamespace *string `json:"metricNamespace,omitempty"`

	// The Azure region containing the resource(s).
	Region *string `json:"region,omitempty"`

	// @deprecated Use resources instead
	ResourceGroup *string `json:"resourceGroup,omitempty"`

	// @deprecated Use resources instead
	ResourceName *string `json:"resourceName,omitempty"`

	// @deprecated Use resourceGroup, resourceName and metricNamespace instead
	ResourceUri *string `json:"resourceUri,omitempty"`

	// Array of resource URIs to be queried.
	Resources []AzureMonitorResource `json:"resources,omitempty"`

	// The granularity of data points to be queried. Defaults to auto.
	TimeGrain *string `json:"timeGrain,omitempty"`

	// TimeGrainUnit @deprecated
	TimeGrainUnit *string `json:"timeGrainUnit,omitempty"`

	// Maximum number of records to return. Defaults to 10.
	Top *string `json:"top,omitempty"`
}

// AzureMonitorDataQuery defines model for AzureMonitorDataQuery.
type AzureMonitorDataQuery = map[string]interface{}

// These are the common properties available to all queries in all datasources.
// Specific implementations will *extend* this interface, adding the required
// properties for the given context.
type AzureMonitorQuery = DataQuery

// AzureMonitorResource defines model for AzureMonitorResource.
type AzureMonitorResource struct {
	MetricNamespace *string `json:"metricNamespace,omitempty"`
	Region          *string `json:"region,omitempty"`
	ResourceGroup   *string `json:"resourceGroup,omitempty"`
	ResourceName    *string `json:"resourceName,omitempty"`
	Subscription    *string `json:"subscription,omitempty"`
}

// Defines the supported queryTypes. GrafanaTemplateVariableFn is deprecated
type AzureQueryType string

// AzureResourceGraphQuery defines model for AzureResourceGraphQuery.
type AzureResourceGraphQuery struct {
	// Azure Resource Graph KQL query to be executed.
	Query *string `json:"query,omitempty"`

	// Specifies the format results should be returned as. Defaults to table.
	ResultFormat *string `json:"resultFormat,omitempty"`
}

// BaseGrafanaTemplateVariableQuery defines model for BaseGrafanaTemplateVariableQuery.
type BaseGrafanaTemplateVariableQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// These are the common properties available to all queries in all datasources.
// Specific implementations will *extend* this interface, adding the required
// properties for the given context.
type DataQuery struct {
	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	// TODO this shouldn't be unknown but DataSourceRef | null
	Datasource *interface{} `json:"datasource,omitempty"`

	// Hide true if query is disabled (ie should not be returned to the dashboard)
	// Note this does not always imply that the query should not be executed since
	// the results from a hidden query may be used as the input to other queries (SSE etc)
	Hide *bool `json:"hide,omitempty"`

	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType *string `json:"queryType,omitempty"`

	// A unique identifier for the query within the list of targets.
	// In server side expressions, the refId is used as a variable name to identify results.
	// By default, the UI will assign A->Z; however setting meaningful names may be useful.
	RefId string `json:"refId"`
}

// GrafanaTemplateVariableQueryType defines model for GrafanaTemplateVariableQueryType.
type GrafanaTemplateVariableQueryType string

// MetricDefinitionsQuery defines model for MetricDefinitionsQuery.
type MetricDefinitionsQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// MetricNamesQuery defines model for MetricNamesQuery.
type MetricNamesQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// MetricNamespaceQuery defines model for MetricNamespaceQuery.
type MetricNamespaceQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// ResourceGroupsQuery defines model for ResourceGroupsQuery.
type ResourceGroupsQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// ResourceNamesQuery defines model for ResourceNamesQuery.
type ResourceNamesQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// ResultFormat defines model for ResultFormat.
type ResultFormat string

// SubscriptionsQuery defines model for SubscriptionsQuery.
type SubscriptionsQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// UnknownQuery defines model for UnknownQuery.
type UnknownQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}

// WorkspacesQuery defines model for WorkspacesQuery.
type WorkspacesQuery struct {
	RawQuery *string `json:"rawQuery,omitempty"`
}
